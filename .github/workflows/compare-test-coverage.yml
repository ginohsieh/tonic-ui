name: Compare Test Coverage

on:
  push:
    branches:
      - main
      - feature/lillian

jobs:
  compare-coverage:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package: 
          - codemod
          - react
          - react-base
          - react-docs
          - react-hooks
          - styled-system
          - theme
          - utils

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      # - name: Install Yarn globally
      #   run: npm install -g yarn
      - name: restore dependencies
        id: restore-dependencies
        uses: actions/cache/restore@v3
        with:
          path: ${{ env.WORKING_DIRECTORY }}/node_modules
          key: cache-dependencies-${{ hashFiles('yarn.lock') }}

      - name: Install yarn dependencies for main branch
        shell: bash
        working-directory: ${{ env.WORKING_DIRECTORY }}
        if: steps.restore-dependencies.outputs.cache-hit != 'true'
        run: yarn install

      - name: Install dependencies
        run: yarn build

      - name: Run tests on main branch
        run: yarn test --coverage
        env:
          CI: true

      - name: Save coverage report from main branch
        run: |
          mkdir -p coverage-main/${{ matrix.package }}
          cp packages/${{ matrix.package }}/coverage/coverage-summary.json coverage-main/${{ matrix.package }}/
        
      - name: Checkout input branch
        uses: actions/checkout@v2
        with:
          clean: false
          ref: ${{ github.event.inputs.branch }}

      - name: Install yarn dependencies for input branch
        shell: bash
        working-directory: ${{ env.WORKING_DIRECTORY }}
        if: steps.restore-dependencies.outputs.cache-hit != 'true'
        run: yarn install

      - name: Install dependencies
        run: yarn build

      - name: cache dependencies
        if: steps.restore-dependencies.outputs.cache-hit != 'true'
        id: cache-dependencies
        uses: actions/cache/save@v3
        with:
          path: |
            .venv
            node_modules
          key: cache-dependencies-${{ hashFiles('yarn.lock') }}

      - name: Run tests on input branch
        run: yarn test --coverage
        env:
          CI: true

      - name: Save coverage report from input branch
        run: |
          mkdir -p coverage-input/${{ matrix.package }}
          cp packages/${{ matrix.package }}/coverage/coverage-summary.json coverage-input/${{ matrix.package }}/


      - name: Compare coverage
        run: |
          main_coverage=$(jq '.total | {lines: .lines.pct, statements: .statements.pct, functions: .functions.pct, branches: .branches.pct}' coverage-main/${{ matrix.package }}/coverage-summary.json)
          input_coverage=$(jq '.total | {lines: .lines.pct, statements: .statements.pct, functions: .functions.pct, branches: .branches.pct}' coverage-input/${{ matrix.package }}/coverage-summary.json)
          
          echo "${{ matrix.package }} Main branch coverage: $main_coverage"
          echo "${{ matrix.package }} Input branch coverage: $input_coverage"

          main_lines=$(echo $main_coverage | jq -r '.lines')
          main_statements=$(echo $main_coverage | jq -r '.statements')
          main_functions=$(echo $main_coverage | jq -r '.functions')
          main_branches=$(echo $main_coverage | jq -r '.branches')

          input_lines=$(echo $input_coverage | jq -r '.lines')
          input_statements=$(echo $input_coverage | jq -r '.statements')
          input_functions=$(echo $input_coverage | jq -r '.functions')
          input_branches=$(echo $input_coverage | jq -r '.branches')