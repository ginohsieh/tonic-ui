name: Compare Test Coverage

on:
  workflow_dispatch:
    inputs:
      base_branch:
        description: 'Base branch to compare against'
        required: true
        default: 'v2'
      compare_branch:
        description: 'Branch to compare'
        required: true
        default: '**'

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: restore dependencies
        id: restore-dependencies
        uses: actions/cache/restore@v3
        with:
          path: ${{ env.WORKING_DIRECTORY }}/node_modules
          key: cache-dependencies-${{ hashFiles('yarn.lock') }}

      - name: Install yarn dependencies for main branch
        shell: bash
        working-directory: ${{ env.WORKING_DIRECTORY }}
        if: steps.restore-dependencies.outputs.cache-hit != 'true'
        run: yarn install

      - name: Install dependencies
        run: yarn build

      - name: Run tests on main branch
        run: yarn test --coverage
        env:
          CI: true

      - name: Save coverage report from main branch
        run: |
          mkdir -p coverage-main
          cp packages/*/coverage/coverage-summary.json coverage-main/*/

      - name: Upload coverage report
        uses: actions/upload-artifact@v2
        with:
          name: coverage-main
          path: coverage-main

      - name: cache dependencies
        if: steps.restore-dependencies.outputs.cache-hit != 'true'
        id: cache-dependencies
        uses: actions/cache/save@v3
        with:
          path: |
            .venv
            node_modules
          key: cache-dependencies-${{ hashFiles('yarn.lock') }}
        
  compare-coverage:
    needs: setup
    if: github.ref != 'refs/heads/v2'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package: 
          - codemod
          - react
          - react-base
          - react-docs
          - react-hooks
          - styled-system
          - theme
          - utils
    steps:
      - name: restore dependencies
        id: restore-dependencies
        uses: actions/cache/restore@v3
        with:
          path: ${{ env.WORKING_DIRECTORY }}/node_modules
          key: cache-dependencies-${{ hashFiles('yarn.lock') }}

      - name: Checkout compare branch
        uses: actions/checkout@v2
        with:
          clean: false
          ref: ${{ github.event.inputs.branch }}

      - name: Install dependencies
        run: yarn build

      - name: Run tests on input branch
        run: yarn test --coverage
        env:
          CI: true

      - name: Save coverage report from input branch
        run: |
          mkdir -p coverage-input/${{ matrix.package }}
          cp packages/${{ matrix.package }}/coverage/coverage-summary.json coverage-input/${{ matrix.package }}/

      - name: Download coverage report
        uses: actions/download-artifact@v2
        with:
          name: coverage-main
          path: coverage-main

      - name: Compare coverage and set output
        id: compare
        run: |
          main_coverage=$(jq '.total | {functions: .functions.pct}' coverage-main/${{ matrix.package }}/coverage-summary.json)
          input_coverage=$(jq '.total | {functions: .functions.pct}' coverage-input/${{ matrix.package }}/coverage-summary.json)
          
          main_functions=$(echo $main_coverage | jq -r '.functions')
          input_functions=$(echo $input_coverage | jq -r '.functions')

          echo "Package: ${{ matrix.package }}"
          echo "Main branch function coverage: $main_functions"
          echo "Input branch function coverage: $input_functions"

          if (( $(echo "$input_functions >= $main_functions" | bc -l) )); then
            echo "Function coverage in ${{ github.ref }} is greater than main for package ${{ matrix.package }}."
            echo "::set-output name=coverage_increase_${{ matrix.package }}::true"
          fi

  create-pr:
    needs: compare-coverage
    runs-on: ubuntu-latest
    steps:
      - name: Check if coverage increased for any package
        id: check-coverage
        run: |
          coverage_increased=false
          for package in codemod react react-base react-docs react-hooks styled-system theme utils; do
            if [[ "${{ needs.compare-coverage.outputs['coverage_increase_${package}'] }}" == "true" ]]; then
              coverage_increased=true
              break
            fi
          done
          echo "coverage_increased=$coverage_increased" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh

      - name: Create PR to merge
        if: env.coverage_increased == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh auth setup-git
          gh pr create --title "Increase function coverage" --body "One or more packages have increased function coverage." --base ${{ github.event.inputs.base_branch }} --head ${{ github.event.inputs.compare_branch }}
